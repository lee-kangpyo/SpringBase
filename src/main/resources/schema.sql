CREATE TABLE users (
    USER_NAME VARCHAR(50) PRIMARY KEY,
    PASSWORD VARCHAR(100) NOT NULL,
    EMAIL VARCHAR(100),
    GOOGLE_ID VARCHAR(255), -- GOOGLE_ID 컬럼 추가
    NAVER_ID VARCHAR(255), -- NAVER_ID 컬럼 추가
    REFRESH_TOKEN  VARCHAR(255),
    USE_YN CHAR(1) NOT NULL,
    -- 로그인 시도 제한 관련 컬럼 추가
    LOGIN_FAILURE_COUNT INT DEFAULT 0,
    LAST_FAILURE_TIMESTAMP TIMESTAMP
);



-- ROLES 테이블 생성 (역할 마스터)
CREATE TABLE ROLES (
    ROLE_ID BIGINT AUTO_INCREMENT PRIMARY KEY,
    ROLE_NAME VARCHAR(50) NOT NULL UNIQUE COMMENT '권한 이름 (예: ROLE_ADMIN)',
    DESCRIPTION VARCHAR(255) COMMENT '권한 설명'
);

-- RESOURCES 테이블 생성 (리소스 마스터)
CREATE TABLE RESOURCES (
    RESOURCE_ID BIGINT AUTO_INCREMENT PRIMARY KEY,
    RESOURCE_TYPE VARCHAR(20) NOT NULL COMMENT '리소스 타입 (API, MENU_ITEM)',
    RESOURCE_PATTERN VARCHAR(255) NOT NULL UNIQUE COMMENT '리소스 고유 키/패턴 (예: /api/users, sidebar:user_management)',
    HTTP_METHOD VARCHAR(10) COMMENT 'HTTP 메소드 (GET, POST 등, API 타입에만 해당)',
    DESCRIPTION VARCHAR(255) COMMENT '리소스 설명',

    -- MENU_ITEM 타입에만 해당되는 추가 컬럼
    MENU_NAME VARCHAR(100) COMMENT '메뉴 표시 이름 (예: 사용자 관리)',
    MENU_URL VARCHAR(255) COMMENT '프론트엔드 라우팅 URL (예: /admin/users)',
    ICON_NAME VARCHAR(100) COMMENT '메뉴 아이콘 이름 (예: FaUserCog, Dashboard)',
    PARENT_RESOURCE_ID BIGINT COMMENT '부모 메뉴의 RESOURCE_ID (그룹 메뉴용)',
    DISPLAY_ORDER INT DEFAULT 0 COMMENT '메뉴 표시 순서',
    IS_GROUP BOOLEAN DEFAULT FALSE COMMENT '그룹 메뉴 여부 (하위 메뉴를 가질 수 있음)',
    USE_YN CHAR(1) DEFAULT 'Y' NOT NULL COMMENT '사용 여부 (Y: 사용, N: 미사용)'
);

-- ROLE_RESOURCE_MAPPINGS 테이블 생성 (권한-리소스 매핑)
CREATE TABLE ROLE_RESOURCE_MAPPINGS (
    ID BIGINT AUTO_INCREMENT PRIMARY KEY,
    ROLE_ID BIGINT NOT NULL,
    RESOURCE_ID BIGINT NOT NULL,
    FOREIGN KEY (ROLE_ID) REFERENCES ROLES(ROLE_ID) ON DELETE CASCADE,
    FOREIGN KEY (RESOURCE_ID) REFERENCES RESOURCES(RESOURCE_ID) ON DELETE CASCADE,
    UNIQUE (ROLE_ID, RESOURCE_ID)
);

-- USER_ROLES 테이블 생성 (사용자-역할 매핑)
CREATE TABLE USER_ROLES (
    ID BIGINT AUTO_INCREMENT PRIMARY KEY,
    USER_NAME VARCHAR(50) NOT NULL,
    ROLE_ID BIGINT NOT NULL,
    FOREIGN KEY (USER_NAME) REFERENCES users(USER_NAME) ON DELETE CASCADE,
    FOREIGN KEY (ROLE_ID) REFERENCES ROLES(ROLE_ID) ON DELETE CASCADE,
    UNIQUE (USER_NAME, ROLE_ID)
);

CREATE TABLE auth_tokens (
    ID BIGINT AUTO_INCREMENT PRIMARY KEY,
    TOKEN VARCHAR(255) NOT NULL,
    USER_NAME VARCHAR(50) NOT NULL,
    TOKEN_TYPE VARCHAR(50) NOT NULL,
    EXPIRY_DATE TIMESTAMP NOT NULL,
    CREATED_DATE TIMESTAMP NOT NULL,
    USED BOOLEAN DEFAULT FALSE NOT NULL,
    CONSTRAINT fk_auth_tokens_users FOREIGN KEY (USER_NAME) REFERENCES users(USER_NAME)
);

-- 첨부파일 묶음 테이블
CREATE TABLE ATTACH (
    ATTACH_ID BIGINT AUTO_INCREMENT PRIMARY KEY COMMENT '첨부 고유 ID',
    ATTACH_NAME VARCHAR(255) NOT NULL COMMENT '첨부명 (예: 1번 게시글 첨부파일)',
    CREATOR_ID VARCHAR(100) COMMENT '생성자 ID',
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '생성 시간'
);

-- 개별 첨부파일 테이블
CREATE TABLE ATTACH_FILE (
    FILE_ID BIGINT AUTO_INCREMENT PRIMARY KEY COMMENT '파일 고유 ID',
    ATTACH_ID BIGINT NOT NULL COMMENT '소속된 첨부 ID',
    ORIGINAL_FILE_NAME VARCHAR(255) NOT NULL COMMENT '원본 파일명',
    SAVED_FILE_NAME VARCHAR(255) NOT NULL COMMENT '서버에 저장된 실제 파일명',
    FILE_PATH VARCHAR(512) NOT NULL COMMENT '파일 저장 디렉토리 경로',
    FILE_SIZE BIGINT NOT NULL COMMENT '파일 크기 (bytes)',
    UPLOADER_ID VARCHAR(100) COMMENT '업로드한 사용자 ID',
    UPLOADED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '업로드 시간',
    STATUS VARCHAR(50) DEFAULT 'AVAILABLE' COMMENT '파일 상태 (AVAILABLE, DELETED)',
    DELETED_AT TIMESTAMP NULL COMMENT '삭제된 시간',
    FOREIGN KEY (ATTACH_ID) REFERENCES ATTACH(ATTACH_ID) ON DELETE CASCADE
);